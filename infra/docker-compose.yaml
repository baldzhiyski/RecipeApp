version: '3.8'

services:

   #Traefik Reverse Proxy
  traefik:
    image: "traefik:latest"
    container_name: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=team2_traefik"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.production.acme.httpchallenge=true"
      - "--certificatesresolvers.production.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.production.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.production.acme.email=moser.stefan02@gmail.com"
      - "--certificatesresolvers.production.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - letsencrypt:/letsencrypt
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik

  database:
    image: mariadb:latest
    restart: always
    container_name: database
    environment:
      MYSQL_DATABASE: 'shopping-app'  # Default database to create
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'  # Allow empty password for root user
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql  # Mount database data to a named volume for persistence
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
    networks:
      - traefik

  recipe-api:
    container_name: "recipe-api"
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ../api  # Change context to point to the correct folder (relative path)
      dockerfile: docker/Dockerfile  # Path to Dockerfile within the specified context
    restart: always
    environment:
      API_IP: "0.0.0.0"
      API_PORT: "8082"
      MYSQL_HOST: database
      MYSQL_PORT: 3306
      MYSQL_DATABASE: shopping-app
      CLOUDINARY_NAME: dcazwzpwt
      CLOUDINARY_API_KEY: 142434264428854
      CLOUDINARY_API_SECRET: s5aetyk1HKbM1uGc__C3U3dH660
    volumes:
      - api_data:/app/data  # Mount app data to a named volume for persistence
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.forceSlash=true"
      - "traefik.http.routers.api.middlewares=api-stripprefix"
      - "traefik.http.services.api.loadbalancer.server.port=8082"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=production"
      - "traefik.docker.network=team2_traefik"
    networks:
      - traefik
    deploy:
      replicas: 1


  web:
    container_name: "frontend"
    build: ../frontend
    restart: always
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8082/api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=PathPrefix(`/`)"
      - "traefik.http.services.website.loadbalancer.server.port=3000"
      - "traefik.http.routers.website.entrypoints=websecure"
      - "traefik.http.routers.website.tls.certresolver=production"
      - "traefik.docker.network=traefik"
    networks:
      - traefik
    deploy:
      replicas: 1


networks:
  traefik:

volumes:
  db_data:
  api_data:
  letsencrypt:
    driver: local
